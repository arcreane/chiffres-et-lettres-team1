// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chiffres_et_lettres_team1.Data;

namespace chiffres_et_lettres_team1.Migrations
{
    [DbContext(typeof(chiffres_et_lettres_team1Context))]
    partial class chiffres_et_lettres_team1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameID1")
                        .HasColumnType("int");

                    b.HasKey("GameID");

                    b.HasIndex("GameID1");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Letters", b =>
                {
                    b.Property<int>("LettersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LettersID1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LettersID");

                    b.HasIndex("LettersID1");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Numbers", b =>
                {
                    b.Property<int>("NumbersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumbersID1")
                        .HasColumnType("int");

                    b.HasKey("NumbersID");

                    b.HasIndex("NumbersID1");

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayerID1")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.HasIndex("PlayerID1");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Game", b =>
                {
                    b.HasOne("chiffres_et_lettres_team1.Controllers.Game", null)
                        .WithMany("AllGames")
                        .HasForeignKey("GameID1");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Letters", b =>
                {
                    b.HasOne("chiffres_et_lettres_team1.Controllers.Letters", null)
                        .WithMany("Words")
                        .HasForeignKey("LettersID1");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Numbers", b =>
                {
                    b.HasOne("chiffres_et_lettres_team1.Controllers.Numbers", null)
                        .WithMany("Operations")
                        .HasForeignKey("NumbersID1");
                });

            modelBuilder.Entity("chiffres_et_lettres_team1.Controllers.Player", b =>
                {
                    b.HasOne("chiffres_et_lettres_team1.Controllers.Player", null)
                        .WithMany("Levels")
                        .HasForeignKey("PlayerID1");
                });
#pragma warning restore 612, 618
        }
    }
}
